version: '2'
services:
  app-api:
    container_name: api
    depends_on:
      - 'postgres'
      - 'redis'
    build: .
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - /var/www/app/public:/var/www/app/public
    expose:
      - "3000"

  app-frontend:
    container_name: frontend
    build:
        context: ../experiment-frontend
        args:
          - API_URL=${API_URL}
    volumes:
      - /var/www/frontend/public:/var/www/frontend/public

  web:
    container_name: web
    build: revproxy
    volumes:
      - /var/www/app/public:/var/www/app/public
      - /var/www/frontend/public:/var/www/frontend/public
    links:
      - app-api
    ports:
      - "80:80"
      - "8080:8080"

  redis:
    container_name: redis
    image: 'redis:3.2-alpine'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    volumes:
      - 'redis:/data'

  postgres:
    container_name: postgres
    image: 'postgres:9.6-alpine'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - 'postgres:/var/lib/postgresql/data'

volumes:
  redis:
  postgres:
